/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;

import java.awt.Color;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import java.sql.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;

import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import java.text.DateFormat;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.Vector;
import javax.swing.table.TableModel;

import net.proteanit.sql.DbUtils;

public class lecture extends javax.swing.JFrame {

    private boolean True;   //sometimes you have to change this
    private static final String username = "root";
    private static final String password = "";
    private static final String dataConn = "jdbc:mysql://localhost:3306/timetablesystem";

    Connection sqlConn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    
    int q,id,i,deleteItem;
    
    /**
     * Creates new form NewJFrame
     */
    public lecture() {
        initComponents();
        displaytable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    //=======================  table ==========================
    
    private void displaytable(){
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/timetablesystem","root","");
            
            String sql = "select * from lecture";
            
            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            
            jTableLec.setModel(DbUtils.resultSetToTableModel(rs));
            
         
            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
            
    }
    
    
    
    
    
    
    
    
    
    
    //---------------------------------FUNCTION---------------------------------------------
    
    public void updateDB(){
        try{
            Class.forName("com.mysql.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn,username,password);
            pst = sqlConn.prepareStatement("select * from lecture");
            
            rs = pst.executeQuery();
            ResultSetMetaData stData = rs.getMetaData();
            
            q = stData.getColumnCount();
            
            DefaultTableModel recordTable = (DefaultTableModel)jTableLec.getModel();
                    recordTable.setColumnCount(0);
                    
            while(rs.next()){
                Vector columnData = new Vector();
                
                for(i=1; 1<=q; i++){
                    columnData.add(rs.getShort("EmpID"));
                    columnData.add(rs.getShort("Name"));
                    columnData.add(rs.getShort("Faculty"));
                    columnData.add(rs.getShort("Department"));
                    columnData.add(rs.getShort("Center"));
                    columnData.add(rs.getShort("Building"));
                    columnData.add(rs.getShort("Level"));
                    columnData.add(rs.getShort("Rank"));
                }
                recordTable.addRow(columnData);
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    
     //---------------------------------FUNCTION---------------------------------------------
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        bg = new javax.swing.JPanel();
        nb = new javax.swing.JPanel();
        WDH = new javax.swing.JButton();
        lecture = new javax.swing.JButton();
        student = new javax.swing.JButton();
        subject = new javax.swing.JButton();
        tag = new javax.swing.JButton();
        session = new javax.swing.JButton();
        location = new javax.swing.JButton();
        generate = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        stat = new javax.swing.JButton();
        heading = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        logo = new javax.swing.JPanel();
        logoLab = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtEmpId = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnGR = new javax.swing.JButton();
        btnRest = new javax.swing.JButton();
        txtRank = new javax.swing.JTextField();
        txtFaculty = new javax.swing.JComboBox<>();
        txtCenter = new javax.swing.JComboBox<>();
        txtBuilding = new javax.swing.JComboBox<>();
        txtLevel = new javax.swing.JComboBox<>();
        errormsg = new javax.swing.JLabel();
        txtDepartment = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableLec = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nb.setBackground(new java.awt.Color(153, 153, 255));

        WDH.setText("Working Days and Hours");
        WDH.setPreferredSize(new java.awt.Dimension(131, 30));
        WDH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WDHActionPerformed(evt);
            }
        });

        lecture.setBackground(new java.awt.Color(102, 102, 102));
        lecture.setText("Lecturer");
        lecture.setPreferredSize(new java.awt.Dimension(131, 30));
        lecture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lectureActionPerformed(evt);
            }
        });

        student.setText("Students");
        student.setPreferredSize(new java.awt.Dimension(131, 30));

        subject.setText("Subjects");
        subject.setPreferredSize(new java.awt.Dimension(131, 30));

        tag.setText("Tags");
        tag.setPreferredSize(new java.awt.Dimension(131, 30));

        session.setText("Sessions");
        session.setPreferredSize(new java.awt.Dimension(131, 30));

        location.setText("Locations");
        location.setPreferredSize(new java.awt.Dimension(131, 30));

        generate.setText("Generate Timetable");
        generate.setPreferredSize(new java.awt.Dimension(131, 30));

        logout.setBackground(new java.awt.Color(255, 0, 51));
        logout.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/logout.png"))); // NOI18N
        logout.setText("LOGOUT");
        logout.setAutoscrolls(true);

        stat.setText("Statistics");

        javax.swing.GroupLayout nbLayout = new javax.swing.GroupLayout(nb);
        nb.setLayout(nbLayout);
        nbLayout.setHorizontalGroup(
            nbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lecture, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
            .addComponent(WDH, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(student, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(subject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tag, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(session, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(location, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(generate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(stat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(nbLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        nbLayout.setVerticalGroup(
            nbLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nbLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(WDH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lecture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(student, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(subject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(session, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(stat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(generate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(logout)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        heading.setBackground(new java.awt.Color(153, 153, 255));
        heading.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("                       TIME TABLE MANAGEMENT SYSTEM");

        javax.swing.GroupLayout headingLayout = new javax.swing.GroupLayout(heading);
        heading.setLayout(headingLayout);
        headingLayout.setHorizontalGroup(
            headingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 751, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        headingLayout.setVerticalGroup(
            headingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headingLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );

        logo.setBackground(new java.awt.Color(153, 153, 255));

        logoLab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/Hnet.com-image.png"))); // NOI18N

        javax.swing.GroupLayout logoLayout = new javax.swing.GroupLayout(logo);
        logo.setLayout(logoLayout);
        logoLayout.setHorizontalGroup(
            logoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoLab, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        logoLayout.setVerticalGroup(
            logoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, logoLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(logoLab))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(102, 102, 255)));

        jLabel2.setText("Lecture Name");

        jLabel3.setText("Employee Id");

        jLabel4.setText("Faculty");

        jLabel5.setText("Department");

        jLabel6.setText("Center");

        jLabel7.setText("Building");

        jLabel8.setText("Level");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        txtEmpId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpIdActionPerformed(evt);
            }
        });
        txtEmpId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmpIdKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEmpIdKeyTyped(evt);
            }
        });

        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnGR.setForeground(new java.awt.Color(0, 255, 0));
        btnGR.setText("GENARATE RANK");
        btnGR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGRActionPerformed(evt);
            }
        });

        btnRest.setText("Reset");
        btnRest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestActionPerformed(evt);
            }
        });

        txtRank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRankActionPerformed(evt);
            }
        });

        txtFaculty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Computing", "Engineering", "Business", "Humanities", "Sciences" }));
        txtFaculty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFacultyActionPerformed(evt);
            }
        });

        txtCenter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Malabe", "Metro", "Matara", "Kandy", "Kurunagala", "Jaffna" }));
        txtCenter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCenterActionPerformed(evt);
            }
        });

        txtBuilding.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "New building", "old building", "D-block", "C-block" }));
        txtBuilding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuildingActionPerformed(evt);
            }
        });

        txtLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6" }));
        txtLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLevelActionPerformed(evt);
            }
        });

        errormsg.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        errormsg.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96)
                        .addComponent(btnRest, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3))
                                        .addGap(7, 7, 7)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                                            .addComponent(txtEmpId)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtFaculty, 0, 224, Short.MAX_VALUE)
                                            .addComponent(txtDepartment, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(141, 141, 141))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnGR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(34, 34, 34)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtLevel, 0, 166, Short.MAX_VALUE)
                                    .addComponent(txtRank)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))
                                .addGap(130, 130, 130)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtBuilding, 0, 166, Short.MAX_VALUE)
                                    .addComponent(txtCenter, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(27, 27, 27))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(262, 262, 262)
                .addComponent(errormsg, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmpId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(txtCenter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuilding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtFaculty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGR)
                    .addComponent(jLabel5)
                    .addComponent(txtDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(errormsg, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRest)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate)
                    .addComponent(btnAdd))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTableLec.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        jTableLec.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "Name", "Faculty", "Department", "Center", "Building", "Level", "Rank"
            }
        ));
        jTableLec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableLecMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableLec);

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 51, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("LECTURER MANAGEMENT");
        jLabel9.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 51, 255)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(bgLayout.createSequentialGroup()
                .addComponent(nb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(heading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(nb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, 985, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void WDHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WDHActionPerformed

    }//GEN-LAST:event_WDHActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/timetablesystem","root","");
            
            int row = jTableLec.getSelectedRow();
            String value = (jTableLec.getModel().getValueAt(row, 0).toString());
            String query = "DELETE FROM lecture WHERE EmpID="+value;
            PreparedStatement pst = conn.prepareStatement(query);
            pst.executeUpdate();
            

             
            DefaultTableModel model = (DefaultTableModel)jTableLec.getModel();
            model.setRowCount(0);
            displaytable();
            
            
            JOptionPane.showMessageDialog(this, "Lecturer deleted");
            conn.close();
           
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void lectureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lectureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lectureActionPerformed

    private void btnGRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGRActionPerformed
            String lvl,rank,id2;
            int id;
            lvl = txtLevel.getSelectedItem().toString();
            id = Integer.parseInt(txtEmpId.getText());
            id2 = String.format("%06d", id);
            if(lvl.equals("1")){
                rank = "1."+id2;
                txtRank.setText(rank);
            }
            if(lvl.equals("1")){
                rank = "1."+id2;
                txtRank.setText(rank);
            }else if(lvl.equals("2")){
                rank = "2."+id2;
                txtRank.setText(rank);
            }else if(lvl.equals("3")){
                rank = "3."+id2;
                txtRank.setText(rank);
            }
            else if(lvl.equals("4")){
                rank = "4."+id2;
                txtRank.setText(rank);
            }
            else if(lvl.equals("5")){
                rank = "5."+id2;
                txtRank.setText(rank);
            }
            else if(lvl.equals("6")){
                rank = "6."+id2;
                txtRank.setText(rank);
            }
            
            
            
    }//GEN-LAST:event_btnGRActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
//        try{
//            Class.forName("com.mysql.jdbc.Driver");
//            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/timemangetest","root","");
//            
//          
//            int row = jTableLec.getSelectedRow();
//            //String value = (jTableLec.getModel().getValueAt(row, 0).toString());
//            String query = "UPDATE lecture SET Name=?, Faculty=?, Department=?, Building=?, Center=?, Level=?  where EmpID=?";
//            PreparedStatement pst = conn.prepareStatement(query);
//            
//            pst.setString(1, txtName.getText());
//            
//            String Fac;
//            Fac = txtFaculty.getSelectedItem().toString();
//            pst.setString(2, Fac);
//            
//            String dep;
//            dep = txtDepartment.getSelectedItem().toString();
//            pst.setString(3, dep);
//            
//            String Build;
//            Build = txtBuilding.getSelectedItem().toString();
//            pst.setString(4, Build);
//            
//            String Cen;
//            Cen = txtCenter.getSelectedItem().toString();
//            pst.setString(5, Cen);
//            
//            
//            
//            String lvl;
//            lvl = txtLevel.getSelectedItem().toString();
//            pst.setString(6, lvl);
//            
//           /* String ra;
//            ra = txtRank.getText();
//            pst.setString(7, ra);*/
//            
//            pst.setInt(7, Integer.parseInt(txtEmpId.getText()));
//
//            
//           // pst.setString(7, txtRank.getText().toString();
//            
//            pst.executeUpdate();
//            
//            //refresh table after insert data
//            DefaultTableModel model = (DefaultTableModel)jTableLec.getModel();
//            model.setRowCount(0);
//            displaytable();
//            
//            
//            JOptionPane.showMessageDialog(this, "Lecturer updated");
//            
//            conn.close();
//            
//        }catch(Exception ex){
//            JOptionPane.showMessageDialog(null, ex);
//        }
        
        
        
         try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/timetablesystem","root","");
            
            String sql = "Update lecture set   Name = ?, Faculty = ? , Department = ?, Building = ?, Center = ? , Level = ? , Rank = ? where EmpID = ?";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, txtName.getText());
            pstmt.setString(2, txtFaculty.getSelectedItem().toString());
            pstmt.setString(3, txtDepartment.getSelectedItem().toString());
            pstmt.setString(4, txtBuilding.getSelectedItem().toString());
            pstmt.setString(5, txtCenter.getSelectedItem().toString());
            pstmt.setString(6, txtLevel.getSelectedItem().toString());
            pstmt.setString(7, txtRank.getText());
            pstmt.setString(8, txtEmpId.getText());
            
            //to disable for editing  the TagID field
            txtEmpId.setEditable(false);
            
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Lecture updated succussfully");     
            
              DefaultTableModel model = (DefaultTableModel)jTableLec.getModel();
            model.setRowCount(0);
            displaytable();
            
             txtEmpId.setText("");
             txtName.setText("");
             txtFaculty.setSelectedIndex(0);
             txtDepartment.setSelectedIndex(0);
             txtBuilding.setSelectedIndex(0);
             txtCenter.setSelectedIndex(0);
             txtLevel.setSelectedIndex(0);
             txtRank.setText("");
             
              
             
             
            conn.close();
         }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/timetablesystem","root","");
            PreparedStatement pstmt = conn.prepareStatement("select * from lecture");       
            ResultSet rs = pstmt.executeQuery();
            
            DefaultTableModel tm=(DefaultTableModel)jTableLec.getModel();
            tm.setRowCount(0);
            
            while (rs.next()){
                Object o[] = {rs.getInt("EmpID"),rs.getString("Name"),rs.getString("Faculty"),rs.getString("Department"),rs.getString("Building"),rs.getString("Center"),rs.getInt("Level"),rs.getString("Rank")};
                tm.addRow(o);
                
               
                
            }
            
            
            
        } catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
            
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if(txtEmpId.getText().trim().isEmpty() || txtName.getText().trim().isEmpty()/* || txtDepartment.getText().trim().isEmpty()*/) {
            errormsg.setText("Enter values for empty feild");
        }
      else {
            errormsg.setText("");
        }
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/timetablesystem","root","");
            
            String sql = "insert into lecture values (?, ?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement pst = conn.prepareStatement(sql);
             
            
            //pst = sqlConn.prepareStatement("insert into lecture (EmpID,Name,Faculty,Department,Center,Building,Level,Rank) values(?,?,?,?,?,?,?,?)");
            int id = Integer.parseInt(txtEmpId.getText());
            String id2 = String.format("%06d", id);
            pst.setString(1, id2);
            pst.setString(2, txtName.getText());
            
            String Fac;
            Fac = txtFaculty.getSelectedItem().toString();
            pst.setString(3, Fac);
            
            String dep;
            dep = txtDepartment.getSelectedItem().toString();
            pst.setString(4, dep);
            
            String Cen;
            Cen = txtCenter.getSelectedItem().toString();
            pst.setString(5, Cen);
            
            String Build;
            Build = txtBuilding.getSelectedItem().toString();
            pst.setString(6, Build);
            
            String lvl;
            lvl = txtLevel.getSelectedItem().toString();
            pst.setString(7, lvl);
            
            pst.setString(8, txtRank.getText());
            
            pst.executeUpdate();
            
            
             
            
            //refresh table after insert data
            DefaultTableModel model = (DefaultTableModel)jTableLec.getModel();
            model.setRowCount(0);
            displaytable();
            
            
            JOptionPane.showMessageDialog(this, "Lecturer added");
            
            conn.close();
            txtDepartment.setSelectedItem(null);
            txtLevel.setSelectedItem(null);
            txtFaculty.setSelectedItem(null);
            txtBuilding.setSelectedItem(null);
            txtCenter.setSelectedItem(null);
            txtEmpId.setText("");
             txtName.setText("");
             txtRank.setText("");
            
         }catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        
       



    }//GEN-LAST:event_btnAddActionPerformed

    private void txtEmpIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmpIdActionPerformed

    private void btnRestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestActionPerformed
        txtEmpId.setText("");
        txtName.setText("");
        txtFaculty.setSelectedItem(0);
        txtDepartment.setSelectedItem(0);
        txtCenter.setSelectedItem(0);
        txtBuilding.setSelectedItem(0);
        txtLevel.setSelectedItem(0);
        txtRank.setText("");
    }//GEN-LAST:event_btnRestActionPerformed

    private void txtRankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRankActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRankActionPerformed

    private void jTableLecMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableLecMouseClicked
        // TODO add your handling code here:
        int i = jTableLec.getSelectedRow();
        TableModel model = jTableLec.getModel();
        
        txtEmpId.setText(model.getValueAt(i,0).toString());
        txtName.setText(model.getValueAt(i,1).toString());
        
        String Fac = model.getValueAt(i,2).toString();
        String Dep = model.getValueAt(i,3).toString();
            switch(Fac){ //
                case "Computing":
                    txtFaculty.setSelectedIndex(0);
                        switch(Dep){
                            case "IT":
                                txtDepartment.setSelectedItem("IT");
                                break;
                            case "ISE":
                                txtDepartment.setSelectedItem("ISE");
                                break;
                            case "CSNE":
                                txtDepartment.setSelectedItem("CSNE");
                                break;
                            case "IM":
                                txtDepartment.setSelectedItem("IM");
                                break;
                    }
                    break;
                case "Engineering":
                    txtFaculty.setSelectedIndex(1);
                            switch(Dep){
                            case "ENG":
                                txtDepartment.setSelectedItem("ENG");
                                break;
                            case "QS":
                                txtDepartment.setSelectedItem("QS");
                                break;
                            
                    }
                    break;
                case "Business":
                    txtFaculty.setSelectedIndex(2);
                        switch(Dep){
                            case "BM":
                                txtDepartment.setSelectedItem("BM");
                                break;
                            case "BA":
                                txtDepartment.setSelectedItem("BA");
                                break;
                            
                    }
                    break;
                case "Humanities":
                    txtFaculty.setSelectedIndex(3);
                        switch(Dep){
                            case "BS":
                                txtDepartment.setSelectedItem("BS");
                                break;
                            case "BT":
                                txtDepartment.setSelectedItem("BT");
                                break;
                            case "LAW":
                                txtDepartment.setSelectedItem("LAW");
                                break;
                            
                    }
                    break;
                case "Sciences":
                    txtFaculty.setSelectedIndex(4);
                        switch(Dep){
                            case "NURSE":
                                txtDepartment.setSelectedItem("NURSE");
                                break;
                            case "PSY":
                                txtDepartment.setSelectedItem("PSY");
                                break;
                            case "PS":
                                txtDepartment.setSelectedItem("PS");
                                break;
                            
                    }
                    break;
            }
      
        
     
        
        String Build = model.getValueAt(i,5).toString();
        switch(Build){ //
                case "New building":
                    txtBuilding.setSelectedIndex(0);
                    break;
                case "old building":
                    txtBuilding.setSelectedIndex(1);
                    break;
                case "D-block":
                    txtBuilding.setSelectedIndex(2);
                    break;
                case "C-block":
                    txtBuilding.setSelectedIndex(3);
                    break;
            }
        
        String Cen = model.getValueAt(i,4).toString();
        switch(Cen){ //
                case "Malabe":
                    txtCenter.setSelectedIndex(0);
                    break;
                case "Metro":
                    txtCenter.setSelectedIndex(1);
                    break;
                case "Matara":
                    txtCenter.setSelectedIndex(2);
                    break;
                case "Kandy":
                    txtCenter.setSelectedIndex(3);
                    break;
                case "Kurunagala":
                    txtCenter.setSelectedIndex(4);
                    break;
                case "Jaffna":
                    txtCenter.setSelectedIndex(5);
                    break;
            }
        
        String lvl = model.getValueAt(i,6).toString();
        switch(lvl){ //
                case "1":
                    txtLevel.setSelectedIndex(0);
                    break;
                case "2":
                    txtLevel.setSelectedIndex(1);
                    break;
                case "3":
                    txtLevel.setSelectedIndex(2);
                    break;
                case "4":
                    txtLevel.setSelectedIndex(3);
                    break;
                case "5":
                    txtLevel.setSelectedIndex(4);
                    break;
                case "6":
                    txtLevel.setSelectedIndex(5);
                    break;
            }
        
        
        txtRank.setText(model.getValueAt(i,7).toString());
        
        
    }//GEN-LAST:event_jTableLecMouseClicked

    private void txtEmpIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmpIdKeyReleased
    
         
        String num = txtEmpId.getText();
        int length = String.valueOf(num).length();
      // try{
        if(length > 6){
            txtEmpId.setBackground(Color.red);
            
        }
        else{
            txtEmpId.setBackground(Color.green);
        }
    // }catch (NumberFormatException e) {
      //  JOptionPane.showConfirmDialog(null, "Please enter numbers only", "naughty", JOptionPane.CANCEL_OPTION);
    //}
       
    }//GEN-LAST:event_txtEmpIdKeyReleased

    private void txtEmpIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmpIdKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmpIdKeyTyped

    private void txtLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLevelActionPerformed

    private void txtCenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCenterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCenterActionPerformed

    private void txtFacultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFacultyActionPerformed
        // TODO add your handling code here ComputingEngineeringBusinessHumanitiesSciences
         
        if(txtFaculty.getSelectedItem().equals("Computing")){
            txtDepartment.setSelectedItem(null);
            txtDepartment.addItem("IT");
            txtDepartment.addItem("ISE");
            txtDepartment.addItem("CSNE");
            txtDepartment.addItem("IM");
            txtDepartment.addItem("SE");
            
        }
        else if(txtFaculty.getSelectedItem().equals("Engineering")){
            txtDepartment.setSelectedItem(null);
            txtDepartment.addItem("ENG");
            txtDepartment.addItem("QS");
           
            
        }else if(txtFaculty.getSelectedItem().equals("Business")){
            txtDepartment.setSelectedItem(null);
            txtDepartment.addItem("BM");
            txtDepartment.addItem("BA");
            
        }else if(txtFaculty.getSelectedItem().equals("Humanities")){
            txtDepartment.setSelectedItem(null);
            txtDepartment.addItem("BS");
            txtDepartment.addItem("BT");
            txtDepartment.addItem("LAW");
            
            
        }else if(txtFaculty.getSelectedItem().equals("Sciences")){
            txtDepartment.setSelectedItem(null);
            txtDepartment.addItem("NURSE");
            txtDepartment.addItem("PSY");
            txtDepartment.addItem("PS");
            
        }
    }//GEN-LAST:event_txtFacultyActionPerformed

    private void txtBuildingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuildingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuildingActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(lecture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(lecture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(lecture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(lecture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new lecture().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton WDH;
    private javax.swing.JPanel bg;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnGR;
    private javax.swing.JButton btnRest;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel errormsg;
    private javax.swing.JButton generate;
    private javax.swing.JPanel heading;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableLec;
    private javax.swing.JButton lecture;
    private javax.swing.JButton location;
    private javax.swing.JPanel logo;
    private javax.swing.JLabel logoLab;
    private javax.swing.JButton logout;
    private javax.swing.JPanel nb;
    private javax.swing.JButton session;
    private javax.swing.JButton stat;
    private javax.swing.JButton student;
    private javax.swing.JButton subject;
    private javax.swing.JButton tag;
    private javax.swing.JComboBox<String> txtBuilding;
    private javax.swing.JComboBox<String> txtCenter;
    private javax.swing.JComboBox<String> txtDepartment;
    private javax.swing.JTextField txtEmpId;
    private javax.swing.JComboBox<String> txtFaculty;
    private javax.swing.JComboBox<String> txtLevel;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtRank;
    // End of variables declaration//GEN-END:variables
}
